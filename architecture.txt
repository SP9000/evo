Entities:
The only user created code for this engine should be contained within the 
application's "entities". Entities are defined by the components that they
are made up of. 
         _____________     _____________
        [  ENTITY 1   ]   [   ENTITY 2  ]
        [ COMPONENT 1 ]   [ COMPONENT 1 ]
        [ COMPONENT 2 ]   [ COMPONENT 2 ]    ....  
        [    ...      ]   [     ...     ]
        [ COMPONENT N ]   [ COMPONENT N ]
        [_____________]   [_____________]
           /   |    \            
        [...] [...] [...]
         /|\   /|\   /|\ 


Components:
Components are the building blocks of entities.  All components contain two
functions: Start and Update. These are called upon creation of a component and
every frame to update the component respectively. Components also may contain
other functions as well as variables to store various information. All parts of
a component are publicly accessible by any other component or function with a
reference to the it.
         ________________________________
        [           COMPONENT 1          ]
        [  void Start()                  ]
        [  void Update()                 ]
        [  void Collide()                ]
        [  void (*DoSomething)(int flag) ]
        [  float x                       ] 
        [  float y                       ]
        [  AABB boundingBox              ]
        [________________________________]

Subsystems:
subsystems contain lower level functionality that is not implemented in the 
standard Entity/Component structure.  Subsystems typically perform on all 
components of a certain type within the engine.  When components of such a type
are added, the appropriate subsystem is automatically notified of their 
existence.

There are currently 2 subsystems: Collision and Scene. 
Collision: 
When a Collider component is added to the engine, the entity to which it is
attached is added to this subsystem. The collision subsystem performs 
collision detection on the colliders within it. When a collision is detected,
the colliding entity's components are all notified with by calling their 
Collide() function.

Scene:
When a Model component is added to the engine, it gets added as well to the 
scene subsystem. This subsystem is responsible for rendering all visible
objects within the current context.
 ____________________       ___________________
[      COLLISION     ]      [       SCENE      ] 
[ ENTITY 1(Collider) ]      [  ENTITY 1(Model) ]
[ ENTITY 3(Collider) ]      [  ENTITY 2(Model) ]
[ ENTITY 5(Collider) ]      [  ENTITY 4(Model) ]
[____________________]      [__________________]

