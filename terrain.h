#ifndef TERRAIN_H
#define TERRAIN_H

#ifdef __cplusplus
extern "C" {
#endif

#include "evo.h"

#define APP_TERRAIN_TILE_H 0.25f
#define APP_TERRAIN_TILE_W 1.0f
#define APP_TERRAIN_TILE_D 1.0f

#define APP_TERRAIN_SIZE_X 128
#define APP_TERRAIN_SIZE_Y 32
#define APP_TERRAIN_SIZE_Z 16

#define APP_TERRAIN_MAX_TILE_TYPES 512

typedef struct app_terrain_tile {
	tv_material *material;
	tv_model *model;
	tv_array *indices;
	tv_model_renderer *renderer;
}app_terrain_tile;

COMPONENT(app_terrain, tv_component)
	/* the dimensions of each tile in the terrain */
	tv_vector3 tile_dimensions;

	/* the model renderer component that will render the terrain */
	tv_model_renderer *renderer;
	
	/* the terrain tiles. they are stored in this order because it seems that 
	 * sequential-Y access to tiles may be frequently needed */
	tvuint tiles[APP_TERRAIN_SIZE_Z][APP_TERRAIN_SIZE_X][APP_TERRAIN_SIZE_Y];	

	/* the model that holds all the tile types (generated by component). */
	tv_model *model;

	app_terrain_tile tile_types[APP_TERRAIN_MAX_TILE_TYPES];
ENDCOMPONENT(app_terrain)

void app_terrain_set_tile(app_terrain *terrain, tvuint type, tvuint x, tvuint y, tvuint z);

#ifdef __cplusplus
}
#endif
#endif